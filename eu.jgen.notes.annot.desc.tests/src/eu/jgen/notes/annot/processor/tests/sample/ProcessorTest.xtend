/*
 * generated by Xtext 2.12.0
 */
package eu.jgen.notes.annot.processor.tests.sample

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.eclipse.xtext.testing.validation.ValidationTestHelper
 
import org.eclipse.xtext.resource.XtextResourceSet
import eu.jgen.notes.annot.processor.impl.AnnotationWorker
import java.util.Collections
import eu.jgen.notes.automation.wrapper.JGenEncyclopedia
import eu.jgen.notes.automation.wrapper.JGenModel
import eu.jgen.notes.automation.wrapper.JGenFactory
import com.ca.gen.jmmi.schema.ObjTypeHelper
import com.ca.gen.jmmi.schema.ObjTypeCode
import eu.jgen.notes.annot.desc.annotation.Metadata
import eu.jgen.notes.annot.desc.tests.AnnotationInjectorProvider
import eu.jgen.notes.annot.processor.impl.DefaultMessager
import eu.jgen.notes.annot.processor.impl.DiagnosticKind
import eu.jgen.notes.annot.processor.tests.sample.SampleProcessor

@RunWith(XtextRunner)
@InjectWith(AnnotationInjectorProvider)
class ProcessorTest {

	static JGenEncyclopedia ency
	static JGenModel genModel  

	@Inject
	ParseHelper<Metadata> parseHelper
	@Inject extension ParseHelper<Metadata>
	@Inject extension ValidationTestHelper
	@Inject XtextResourceSet resourceSet
	@Inject AnnotationWorker worker

	@Test
	def void loadModel() {

		var JGenFactory factory = JGenFactory::eINSTANCE
		ency = factory.createEncyclopedia()
		ency.connect()
		genModel = ency.findModels().get(0)
		var objects = genModel.findTypeObjects(ObjTypeHelper.getCode(ObjTypeCode.ACBLKBSD))
		worker.initProcessor(new SampleProcessor()).setSources(objects).activate

	}
}
